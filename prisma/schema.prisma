// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  name        String
  username    String    @unique
  password    String
  cpf         String    @unique
  fone        BigInt?
  email       String    @unique
  is_enabled  Boolean   @default(true)
  is_admin    Boolean   @default(false)
  is_product  Boolean   @default(false)
  is_stock    Boolean   @default(false)
  is_revenues Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updateAt    DateTime?
  token       Token[]
}

model Token {
  id         String    @id @default(uuid())
  user_id    String
  token      String    @default(uuid())
  expires    DateTime
  used       Boolean   @default(false)
  used_in    DateTime?
  created_at DateTime  @default(now())
  updated_t  DateTime?
  user       User      @relation(fields: [user_id], references: [id])
}

model Ingredients {
  id                   String                 @id @default(uuid())
  description          String                 @unique
  value                Float
  created_at           DateTime               @default(now())
  updated_t            DateTime?
  ingredients_Revenues Ingredients_Revenues[]
}

model Ingredients_Revenues {
  fk_ingredient     String
  fk_revenues       String
  amount_ingredient Int
  ingredients       Ingredients @relation(fields: [fk_ingredient], references: [id])
  revenues          Revenues    @relation(fields: [fk_revenues], references: [id])

  @@id([fk_ingredient, fk_revenues])
}

model Revenues {
  id                   String                 @id @default(uuid())
  description          String                 @unique
  value                Float
  yield_per_quantity   Int?
  time_in_hours        Int?
  presumed_profit      Float?
  imagem               String?
  created_at           DateTime               @default(now())
  updated_t            DateTime?
  ingredients_Revenues Ingredients_Revenues[]
  // recipe_steps         Recipe_steps[]
}

// Removido 
// model Recipe_steps {
//   id          String   @id @default(uuid())
//   text        String
//   fk_revenues String
//   revenues    Revenues @relation(fields: [fk_revenues], references: [id])
// }
